<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <title>ADPanel</title>
    <link id="favicon" rel="icon" type="image/png" href="/images/adpanel-dark.png">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://site-assets.fontawesome.com/releases/v6.7.2/css/all.css">
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@400;700;900&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Bitcount:wght@100..900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/dashboard.css">
    <style>
      #splash-screen {
        position: fixed;
        top: 0; left: 0;
        width: 100vw;
        height: 100vh;
        background: url('https://files.catbox.moe/6yav8u.png') center/contain no-repeat;
        background-color: #111;
        background-size: cover;
        z-index: 9999;
        opacity: 1;
        transition: opacity 1s ease;
      }
      #splash-screen.hidden {
        opacity: 0;
        pointer-events: none;
      }

      /* small style tweak so settings button doesn't overlay weirdly */
      .server-box { position: relative; }
      .settings {
        position: absolute;
        right: 12px;
        top: 12px;
        background: rgba(0,0,0,0.45);
        border: none;
        padding: 8px;
        border-radius: 8px;
        color: #fff;
        cursor: pointer;
      }
    </style>
  </head>
  <body>
    <div id="splash-screen"></div>

    <h1 class="title"><a href="/" style="text-decoration: none; color: white;">ADPanel</a></h1>

    <form class="upload-form" action="/upload" method="POST" enctype="multipart/form-data">
      <input type="file" name="file" accept=".zip" required>
      <button class="upload">Upload ZIP</button>
    </form>

            </div>

        <div class="pet"></div>
        <div>
          <a class="start">Let's get started</a>
        </div>
        <div>
          <a class="start-description">Create your server</a>
        </div>
    </div>

    <div class="list">
      <% bots.forEach(function(bot){ %>
        <div class="server-box" onclick="location.href='/bot/<%= bot %>'">
          <div class="server-header">
            <span class="server-icon" style="color: #b9bbbb;"><i class="fa-solid fa-server"></i></span>
            <span class="server-name"><%= bot %></span>
                  <% }) %>
          </div>

<div>
  <% if (isAdmin) { %>
    <button class="settings" title="Settings" onclick="event.stopPropagation(); location.href='/settings'" style="background: none; border: none; padding: 0; cursor: pointer; background-color: #252733;">
      <i class="fa-solid fa-square-sliders"></i>
    </button>
  <% } else { %>
    <button class="settings" title="You are not admin" disabled style="background: none; border: none; padding: 0; cursor: not-allowed; opacity: 0.5; background-color: #252733;">
      <i class="fa-solid fa-lock"></i>
    </button>
    <button id="logoutBtn" onclick="logoutBtn()" title="Log Out"><i class="fa-solid fa-right-from-bracket"></i></button>
  <% } %>
</div>

    <script>
      const darkFavicon = '/images/adpanel-white.png';
      const lightFavicon = '/images/adpanel-dark.png';
      function updateIcons() {
        const isDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        document.querySelectorAll('link[rel="icon"], link[rel="apple-touch-icon"]').forEach(el => el.remove());
        const linkFavicon = document.createElement('link');
        linkFavicon.rel = 'icon';
        linkFavicon.type = 'image/png';
        linkFavicon.href = isDark ? darkFavicon : lightFavicon;
        document.head.appendChild(linkFavicon);
      }
      updateIcons();
      window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', updateIcons);

      window.addEventListener('DOMContentLoaded', () => {
        const splash = document.getElementById('splash-screen');
        if (!localStorage.getItem('seenSplash')) {
          const displayTime = 5000;
          setTimeout(() => {
            splash.classList.add('hidden');
            setTimeout(() => splash.remove(), 1000);
          }, displayTime);
          localStorage.setItem('seenSplash', 'true');
        } else {
          splash.remove();
        }
      });

    function deleteAllClientCookies() {
      const cookies = document.cookie.split("; ");
      for (const cookie of cookies) {
        const eqPos = cookie.indexOf("=");
        const name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;
        document.cookie = name + "=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/";
      }
    }

    document.getElementById("logoutBtn").addEventListener("click", async () => {
      try {
        deleteAllClientCookies();
        await fetch('/logout', { method: 'POST', credentials: 'include' });
        location.href = '/login';
      } catch (err) {
        console.error(err);
        alert('Failed to log out');
      }
    });
    </script>

  </body>
</html>
